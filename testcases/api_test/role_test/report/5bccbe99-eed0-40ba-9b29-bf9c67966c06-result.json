{"name": "test_get_all_role[管理员token-True-200-操作成功]", "status": "failed", "statusDetails": {"message": "AssertionError: 接口返回码是 【 9990 】, 返回信息：token丢失！ \nassert False == True\n +  where False = <api.result_api.ResultBase object at 0x000001261C1CE4C0>.success", "trace": "self = <testcases.api_test.role_test.test_01_get_all_role.TestGetAllRole object at 0x000001261C2883D0>\nget_admin_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3MjAxNCwiZXhwIjoxNzMwNzc1NjE0LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.tc76eDia3bH6Oh-ISlBNmHoFOYR5RyNaRHDZef0dLvI'\nget_test_user_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3MjAxNCwiZXhwIjoxNzMwNzc1NjE0LCJpZCI6MTg0OTM1MTM1NTc2NDA3NjU0Nn0.0lUOY5yVQvQyBr9RgzxhE10DdvN7YhqtlKGIodfrwXg'\nget_nopri_user_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3MjAxNCwiZXhwIjoxNzMwNzc1NjE0LCJpZCI6MTg0NjgwMTQ0MjQzMzY4MzQ1OH0.TXt4ScmHSMTRr_rH1MitR3EE7gmlCbHk842JRoMNfbU'\ntoken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3MjAxNCwiZXhwIjoxNzMwNzc1NjE0LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.tc76eDia3bH6Oh-ISlBNmHoFOYR5RyNaRHDZef0dLvI'\nexpect_result = True, expect_code = 200, expect_msg = '操作成功'\n\n    @allure.story(\"用例--获取所有角色\")\n    @allure.description(\"该用例是针对获取所有角色接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"token,expect_result,expect_code, expect_msg\",\n                             api_data[\"test_get_all_role\"])\n    def test_get_all_role(self,get_admin_token_fixture,get_test_user_token_fixture,get_nopri_user_fixture,token,expect_result, expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        if token == \"管理员token\":\n            token = get_admin_token_fixture\n        elif token == \"无权限token\":\n            token = get_nopri_user_fixture\n        elif token == \"测试token\":\n            token = get_test_user_token_fixture\n        result =get_all_role(token)\n>       assert_results(result,expect_result, expect_code, expect_msg)\n\ntest_01_get_all_role.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresult = <api.result_api.ResultBase object at 0x000001261C1CE4C0>\nexpect_result = True, expect_code = 200, expect_msg = '操作成功'\n\n    def assert_results(result, expect_result, expect_code, expect_msg):\n        \"\"\"\n        断言结果并记录日志。\n        参数:\n            result: 实际结果对象，应该包含success, error, data等属性。\n            expect_result: 期望的成功状态。\n            expect_code: 期望的返回code。\n            expect_msg: 期望的返回message。\n        \"\"\"\n    \n        # 断言实际结果与期望结果相同\n>       assert result.success == expect_result, result.error\nE       AssertionError: 接口返回码是 【 9990 】, 返回信息：token丢失！ \nE       assert False == True\nE        +  where False = <api.result_api.ResultBase object at 0x000001261C1CE4C0>.success\n\n..\\..\\conftest.py:25: AssertionError"}, "description": "该用例是针对获取所有角色接口的测试", "attachments": [{"name": "log", "source": "f95f5d1e-e1d1-42bf-844d-0b0f4774f4c4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "token", "value": "'管理员token'"}, {"name": "expect_result", "value": "True"}, {"name": "expect_code", "value": "200"}, {"name": "expect_msg", "value": "'操作成功'"}], "start": 1730772015017, "stop": 1730772015022, "uuid": "ce81ff4c-88cd-4888-82bc-83a41cc77af5", "historyId": "77e4fab87ec6385f732d5543655b00a0", "testCaseId": "d87a95572b17e03f4fcea947767ea675", "fullName": "testcases.api_test.role_test.test_01_get_all_role.TestGetAllRole#test_get_all_role", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "feature", "value": "角色模块"}, {"name": "story", "value": "用例--获取所有角色"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.role_test"}, {"name": "suite", "value": "test_01_get_all_role"}, {"name": "subSuite", "value": "TestGetAllRole"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "28616-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.role_test.test_01_get_all_role"}]}