{"name": "test_get_role[管理员token-1846030109260034050-True-200-操作成功]", "status": "broken", "statusDetails": {"message": "requests.exceptions.InvalidHeader: Value for header {token: 1846030109260034050} must be of type str or bytes, not <class 'int'>", "trace": "header = ('token', 1846030109260034050)\n\n    def check_header_validity(header):\n        \"\"\"Verifies that header value is a string which doesn't contain\n        leading whitespace or return characters. This prevents unintended\n        header injection.\n    \n        :param header: tuple, in the format (name, value).\n        \"\"\"\n        name, value = header\n    \n        if isinstance(value, bytes):\n            pat = _CLEAN_HEADER_REGEX_BYTE\n        else:\n            pat = _CLEAN_HEADER_REGEX_STR\n        try:\n>           if not pat.match(value):\nE           TypeError: expected string or bytes-like object\n\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\utils.py:977: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcases.api_test.role_test.test_02_get_role.TestGetAllRole object at 0x000001BA0A73BBB0>\nget_admin_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3MzQyOSwiZXhwIjoxNzMwNzc3MDI5LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.qaXCgQuzgOrmvVse1zOguAF4kyutCLZ0y6Ushej2AbY'\nget_test_user_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3MzQyOSwiZXhwIjoxNzMwNzc3MDI5LCJpZCI6MTg0OTM1MTM1NTc2NDA3NjU0Nn0.xmmhQktapZnI-AWX9BBKipNCCsuQv9kr0YkIVJjaK4k'\nget_nopri_user_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3MzQzMCwiZXhwIjoxNzMwNzc3MDMwLCJpZCI6MTg0NjgwMTQ0MjQzMzY4MzQ1OH0.ZwtdhZJaoBim1hW9KUbQWNaigSL6g3-2bQFvfBOR1Lw'\ntoken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3MzQyOSwiZXhwIjoxNzMwNzc3MDI5LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.qaXCgQuzgOrmvVse1zOguAF4kyutCLZ0y6Ushej2AbY'\nuserId = 1846030109260034050, expect_result = True, expect_code = 200\nexpect_msg = '操作成功'\n\n    @allure.story(\"用例--获取指定角色\")\n    @allure.description(\"该用例是针对获取指定角色接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"token,userId,expect_result,expect_code, expect_msg\",\n                             api_data[\"test_get_role\"])\n    def test_get_role(self,get_admin_token_fixture,get_test_user_token_fixture,get_nopri_user_fixture,token,userId,expect_result, expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        if token == \"管理员token\":\n            token = get_admin_token_fixture\n        elif token == \"无权限token\":\n            token = get_nopri_user_fixture\n        elif token == \"测试token\":\n            token = get_test_user_token_fixture\n>       result =get_role(token,userId)\n\ntest_02_get_role.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\api\\role_api.py:35: in get_role\n    res = role_http_client.get_role(headers=headers,data=data)\n..\\..\\..\\api\\rbac_http_client\\role_http_client.py:20: in get_role\n    return self.post(\"/getRole\", **kwargs)\n..\\..\\..\\common\\http_client.py:15: in post\n    return self.request(url, \"POST\", headers,data, json, **kwargs)\n..\\..\\..\\common\\http_client.py:33: in request\n    return self.session.post(url, headers=headers ,data=data, json=json,**kwargs)\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\sessions.py:590: in post\n    return self.request('POST', url, data=data, json=json, **kwargs)\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\sessions.py:528: in request\n    prep = self.prepare_request(req)\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\sessions.py:456: in prepare_request\n    p.prepare(\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\models.py:317: in prepare\n    self.prepare_headers(headers)\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\models.py:451: in prepare_headers\n    check_header_validity(header)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nheader = ('token', 1846030109260034050)\n\n    def check_header_validity(header):\n        \"\"\"Verifies that header value is a string which doesn't contain\n        leading whitespace or return characters. This prevents unintended\n        header injection.\n    \n        :param header: tuple, in the format (name, value).\n        \"\"\"\n        name, value = header\n    \n        if isinstance(value, bytes):\n            pat = _CLEAN_HEADER_REGEX_BYTE\n        else:\n            pat = _CLEAN_HEADER_REGEX_STR\n        try:\n            if not pat.match(value):\n                raise InvalidHeader(\"Invalid return character or leading space in header: %s\" % name)\n        except TypeError:\n>           raise InvalidHeader(\"Value for header {%s: %s} must be of type str or \"\n                                \"bytes, not %s\" % (name, value, type(value)))\nE           requests.exceptions.InvalidHeader: Value for header {token: 1846030109260034050} must be of type str or bytes, not <class 'int'>\n\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\utils.py:980: InvalidHeader"}, "description": "该用例是针对获取指定角色接口的测试", "attachments": [{"name": "log", "source": "ef55b9b9-ebfe-4a32-b551-b2d9c6ee85a9-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "token", "value": "'管理员token'"}, {"name": "userId", "value": "1846030109260034050"}, {"name": "expect_result", "value": "True"}, {"name": "expect_code", "value": "200"}, {"name": "expect_msg", "value": "'操作成功'"}], "start": 1730773430362, "stop": 1730773430363, "uuid": "dede8bb2-47ff-4804-b8ec-e88f0ae30067", "historyId": "1221e693e4f06112cdaef63055c2f59a", "testCaseId": "69e16f8e54ef12a666593906a2d99fd1", "fullName": "testcases.api_test.role_test.test_02_get_role.TestGetAllRole#test_get_role", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "story", "value": "用例--获取指定角色"}, {"name": "feature", "value": "角色模块"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.role_test"}, {"name": "suite", "value": "test_02_get_role"}, {"name": "subSuite", "value": "TestGetAllRole"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "27312-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.role_test.test_02_get_role"}]}