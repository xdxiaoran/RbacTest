{"name": "test_get_all_role[管理员token-True-200-操作成功]", "status": "broken", "statusDetails": {"message": "TypeError: request() got an unexpected keyword argument 'parms'", "trace": "self = <testcases.api_test.role_test.test_01_get_all_role.TestGetAllRole object at 0x000002273AAA99A0>\nget_admin_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3MTcyMywiZXhwIjoxNzMwNzc1MzIzLCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.ekj1QlaH1Kg2VA_oQbQzzlq-SxHpvhOLxCM7bOmbfoE'\nget_test_user_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3MTcyNCwiZXhwIjoxNzMwNzc1MzI0LCJpZCI6MTg0OTM1MTM1NTc2NDA3NjU0Nn0.WfiaOHFTlSzV2BRjw_uRZbYFPfBO9QQ0W7g0Ll5N5HA'\nget_nopri_user_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3MTcyNCwiZXhwIjoxNzMwNzc1MzI0LCJpZCI6MTg0NjgwMTQ0MjQzMzY4MzQ1OH0.GL5zCJ0Ei9nCSb1VJel2r_eUTk4_025qSzwz14k8R5g'\ntoken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3MTcyMywiZXhwIjoxNzMwNzc1MzIzLCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.ekj1QlaH1Kg2VA_oQbQzzlq-SxHpvhOLxCM7bOmbfoE'\nexpect_result = True, expect_code = 200, expect_msg = '操作成功'\n\n    @allure.story(\"用例--获取所有角色\")\n    @allure.description(\"该用例是针对获取所有角色接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"token,expect_result,expect_code, expect_msg\",\n                             api_data[\"test_get_all_role\"])\n    def test_get_all_role(self,get_admin_token_fixture,get_test_user_token_fixture,get_nopri_user_fixture,token,expect_result, expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        if token == \"管理员token\":\n            token = get_admin_token_fixture\n        elif token == \"无权限token\":\n            token = get_nopri_user_fixture\n        elif token == \"测试token\":\n            token = get_test_user_token_fixture\n>       result =get_all_role(token)\n\ntest_01_get_all_role.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\api\\role_api.py:20: in get_all_role\n    res = role_http_client.get_all_role(headers=headers,parms=parms)\n..\\..\\..\\api\\rbac_http_client\\role_http_client.py:16: in get_all_role\n    return self.get(\"/getAllRole\", **kwargs)\n..\\..\\..\\common\\http_client.py:12: in get\n    return self.request(url, \"GET\", **kwargs)\n..\\..\\..\\common\\http_client.py:31: in request\n    return self.session.get(url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <requests.sessions.Session object at 0x000002273AA5E820>\nurl = 'http://127.0.0.1/role/getAllRole'\nkwargs = {'allow_redirects': True, 'parms': {'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJ...6MTczMDc3MTcyMywiZXhwIjoxNzMwNzc1MzIzLCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.ekj1QlaH1Kg2VA_oQbQzzlq-SxHpvhOLxCM7bOmbfoE'}}\n\n    def get(self, url, **kwargs):\n        r\"\"\"Sends a GET request. Returns :class:`Response` object.\n    \n        :param url: URL for the new :class:`Request` object.\n        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n        :rtype: requests.Response\n        \"\"\"\n    \n        kwargs.setdefault('allow_redirects', True)\n>       return self.request('GET', url, **kwargs)\nE       TypeError: request() got an unexpected keyword argument 'parms'\n\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\sessions.py:555: TypeError"}, "description": "该用例是针对获取所有角色接口的测试", "attachments": [{"name": "log", "source": "6a392d4d-a078-462a-8f6f-32f581015a69-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "token", "value": "'管理员token'"}, {"name": "expect_result", "value": "True"}, {"name": "expect_code", "value": "200"}, {"name": "expect_msg", "value": "'操作成功'"}], "start": 1730771724824, "stop": 1730771724825, "uuid": "2c7dcd43-ef01-49fd-9d3a-b7e7a6fbbe24", "historyId": "77e4fab87ec6385f732d5543655b00a0", "testCaseId": "d87a95572b17e03f4fcea947767ea675", "fullName": "testcases.api_test.role_test.test_01_get_all_role.TestGetAllRole#test_get_all_role", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "story", "value": "用例--获取所有角色"}, {"name": "feature", "value": "角色模块"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.role_test"}, {"name": "suite", "value": "test_01_get_all_role"}, {"name": "subSuite", "value": "TestGetAllRole"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "3028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.role_test.test_01_get_all_role"}]}