{"name": "test_add_role[管理员token-用户管理员-6666-184607926164-testDes-addResourceList4-False-10090-当前角色已经存在！]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected code: 10090, but got: 10070\nassert 10070 == 10090", "trace": "self = <testcases.api_test.role_test.test_04_add_role.TestAddRole object at 0x000001F65D501B20>\nget_admin_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3NjUwNywiZXhwIjoxNzMwNzgwMTA3LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.GM6KrY_qnDg2UbqOE8eM5MsmWvblgCC43sCmzD_Xgd4'\nget_nopri_user_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3NjUwOCwiZXhwIjoxNzMwNzgwMTA4LCJpZCI6MTg0NjgwMTQ0MjQzMzY4MzQ1OH0.Kp9EKsxX6wH31A2Xkpo9Sni9cpIpjy3_rSOkdTU3heY'\ntoken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3NjUwNywiZXhwIjoxNzMwNzgwMTA3LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.GM6KrY_qnDg2UbqOE8eM5MsmWvblgCC43sCmzD_Xgd4'\nroleName = '用户管理员', code = '6666', parentName = '184607926164'\ndescription = 'testDes', addResourceList = [1846109800614629379]\nexpect_result = False, expect_code = 10090, expect_msg = '当前角色已经存在！'\n\n    @allure.story(\"用例--新增角色\")\n    @allure.description(\"该用例是针对新增角色接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"token,roleName,code,parentName,description,addResourceList,expect_result,expect_code, expect_msg\",\n                             api_data[\"test_add_role\"])\n    def test_add_role(self,get_admin_token_fixture,get_nopri_user_fixture,token,roleName,code,parentName,description,addResourceList,expect_result,expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        if token==\"管理员token\":\n            token=get_admin_token_fixture\n        elif token==\"无权限token\":\n            token=get_nopri_user_fixture\n        result = add_role(token,roleName,code,parentName,description,addResourceList)\n        if result.success:\n            logger.info(\"*************** 清理数据 ***************\")\n            db.execute_db(f\"delete from role where role_name='{roleName}'\")\n>       assert_results(result,expect_result, expect_code, expect_msg)\n\ntest_04_add_role.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresult = <api.result_api.ResultBase object at 0x000001F65D5C9AF0>\nexpect_result = False, expect_code = 10090, expect_msg = '当前角色已经存在！'\n\n    def assert_results(result, expect_result, expect_code, expect_msg):\n        \"\"\"\n        断言结果并记录日志。\n        参数:\n            result: 实际结果对象，应该包含success, error, data等属性。\n            expect_result: 期望的成功状态。\n            expect_code: 期望的返回code。\n            expect_msg: 期望的返回message。\n        \"\"\"\n    \n        # 断言实际结果与期望结果相同\n        assert result.success == expect_result, result.error\n        if \"接口请求失败\" in result.error:\n            assert False\n        # 记录期望和实际结果\n        logger.info(\"code ==>> 期望结果：{}， 实际结果：{}\".format(expect_code, result.data[\"code\"]))\n        logger.info(\"返回信息 ==>> 期望结果：{}， 实际结果：{}\".format(expect_msg, result.data[\"message\"]))\n        # 进一步断言返回的code和message\n>       assert result.data[\"code\"] == expect_code, \"Expected code: {}, but got: {}\".format(expect_code, result.data[\"code\"])\nE       AssertionError: Expected code: 10090, but got: 10070\nE       assert 10070 == 10090\n\n..\\..\\conftest.py:32: AssertionError"}, "description": "该用例是针对新增角色接口的测试", "attachments": [{"name": "log", "source": "4cdc5f4e-dcb9-4757-8c7a-ae462f1e7f39-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "token", "value": "'管理员token'"}, {"name": "roleName", "value": "'用户管理员'"}, {"name": "code", "value": "'6666'"}, {"name": "parentName", "value": "'184607926164'"}, {"name": "description", "value": "'testDes'"}, {"name": "addResourceList", "value": "[1846109800614629379]"}, {"name": "expect_result", "value": "False"}, {"name": "expect_code", "value": "10090"}, {"name": "expect_msg", "value": "'当前角色已经存在！'"}], "start": 1730776513510, "stop": 1730776514283, "uuid": "1426ad82-7144-466a-b94f-aa7345845517", "historyId": "81676f09676a6bbdcff2b3e84e11a039", "testCaseId": "2d7db13d5c0bbc2d4110c0e6621fd2b7", "fullName": "testcases.api_test.role_test.test_04_add_role.TestAddRole#test_add_role", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "story", "value": "用例--新增角色"}, {"name": "feature", "value": "角色模块"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.role_test"}, {"name": "suite", "value": "test_04_add_role"}, {"name": "subSuite", "value": "TestAddRole"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "29812-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.role_test.test_04_add_role"}]}