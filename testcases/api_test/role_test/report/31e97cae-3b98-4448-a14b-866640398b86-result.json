{"name": "test_get_role_resource_list[管理员token-True-200-操作成功]", "status": "failed", "statusDetails": {"message": "AssertionError: 接口请求失败，状态码是 【 405 】 \nassert False == True\n +  where False = <api.result_api.ResultBase object at 0x00000162ADF13B80>.success", "trace": "self = <testcases.api_test.role_test.test_09_get_all_resource_list.TestGetResourceList object at 0x00000162ADE1E730>\nget_admin_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc4NzE4OSwiZXhwIjoxNzMwNzkwNzg5LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.W1vQfV3FhpJ5PUGmx1gEHJjE9BUBZHWJamAXIAeuUkQ'\nget_nopri_user_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc4NzE5MCwiZXhwIjoxNzMwNzkwNzkwLCJpZCI6MTg0NjgwMTQ0MjQzMzY4MzQ1OH0.3eehgNUTKBSmriM2jt471-CUz4WhXR4LtlkJ0MZ9-TA'\ntoken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc4NzE4OSwiZXhwIjoxNzMwNzkwNzg5LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.W1vQfV3FhpJ5PUGmx1gEHJjE9BUBZHWJamAXIAeuUkQ'\nexpect_result = True, expect_code = 200, expect_msg = '操作成功'\n\n    @allure.story(\"用例--获取所有资源信息列表\")\n    @allure.description(\"该用例是针对获取所有资源信息的接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"token,expect_result,expect_code, expect_msg\",\n                             api_data[\"test_get_all_resource_list\"])\n    def test_get_role_resource_list(self,get_admin_token_fixture,get_nopri_user_fixture,token,expect_result,expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        if token == \"管理员token\":\n            token = get_admin_token_fixture\n        elif token == \"无权限token\":\n            token = get_nopri_user_fixture\n        result = get_all_resource_list(token)\n>       assert_results(result,expect_result, expect_code, expect_msg)\n\ntest_09_get_all_resource_list.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresult = <api.result_api.ResultBase object at 0x00000162ADF13B80>\nexpect_result = True, expect_code = 200, expect_msg = '操作成功'\n\n    def assert_results(result, expect_result, expect_code, expect_msg):\n        \"\"\"\n        断言结果并记录日志。\n        参数:\n            result: 实际结果对象，应该包含success, error, data等属性。\n            expect_result: 期望的成功状态。\n            expect_code: 期望的返回code。\n            expect_msg: 期望的返回message。\n        \"\"\"\n    \n        # 断言实际结果与期望结果相同\n>       assert result.success == expect_result, result.error\nE       AssertionError: 接口请求失败，状态码是 【 405 】 \nE       assert False == True\nE        +  where False = <api.result_api.ResultBase object at 0x00000162ADF13B80>.success\n\n..\\..\\conftest.py:25: AssertionError"}, "description": "该用例是针对获取所有资源信息的接口的测试", "attachments": [{"name": "log", "source": "4d0829fb-ff17-463f-8849-1ae89206887e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "token", "value": "'管理员token'"}, {"name": "expect_result", "value": "True"}, {"name": "expect_code", "value": "200"}, {"name": "expect_msg", "value": "'操作成功'"}], "start": 1730787190478, "stop": 1730787190484, "uuid": "9da2c312-14cd-432c-befa-276bc11641e4", "historyId": "b73a3a8a390ff3697ff68cb65d8f746b", "testCaseId": "da91057eeb286f0db6b721dbea0fe08f", "fullName": "testcases.api_test.role_test.test_09_get_all_resource_list.TestGetResourceList#test_get_role_resource_list", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "story", "value": "用例--获取所有资源信息列表"}, {"name": "feature", "value": "角色模块"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.role_test"}, {"name": "suite", "value": "test_09_get_all_resource_list"}, {"name": "subSuite", "value": "TestGetResourceList"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "11784-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.role_test.test_09_get_all_resource_list"}]}