{"name": "test_get_role[管理员token--False-9990-当前角色不存在！]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected code: 9990, but got: 10088\nassert 10088 == 9990", "trace": "self = <testcases.api_test.role_test.test_02_get_role.TestGetAllRole object at 0x00000269317FAD90>\nget_admin_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3NDE2OSwiZXhwIjoxNzMwNzc3NzY5LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.Sllv36S8Brxa8_-kLnsrWfFnPf8q6NE51VU9tpc9myU'\nget_test_user_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3NDE3MCwiZXhwIjoxNzMwNzc3NzcwLCJpZCI6MTg0OTM1MTM1NTc2NDA3NjU0Nn0.EWwI8_-TupvPZRRS5HmCrJopd3KkUtEWi2N8gDpO_Lk'\nget_nopri_user_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3NDE3MCwiZXhwIjoxNzMwNzc3NzcwLCJpZCI6MTg0NjgwMTQ0MjQzMzY4MzQ1OH0.qInZl2Zb0G0aREVRyzC27vTBeu4lY2ndWSkZFYTbjdU'\ntoken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc3NDE2OSwiZXhwIjoxNzMwNzc3NzY5LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.Sllv36S8Brxa8_-kLnsrWfFnPf8q6NE51VU9tpc9myU'\nroleId = '', expect_result = False, expect_code = 9990, expect_msg = '当前角色不存在！'\n\n    @allure.story(\"用例--获取指定角色\")\n    @allure.description(\"该用例是针对获取指定角色接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"token,roleId,expect_result,expect_code, expect_msg\",\n                             api_data[\"test_get_role_info\"])\n    def test_get_role(self,get_admin_token_fixture,get_test_user_token_fixture,get_nopri_user_fixture,token,roleId,expect_result, expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        if token == \"管理员token\":\n            token = get_admin_token_fixture\n        elif token == \"无权限token\":\n            token = get_nopri_user_fixture\n        elif token == \"测试token\":\n            token = get_test_user_token_fixture\n        result =get_role(roleId,token)\n>       assert_results(result,expect_result, expect_code, expect_msg)\n\ntest_02_get_role.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresult = <api.result_api.ResultBase object at 0x00000269318F02B0>\nexpect_result = False, expect_code = 9990, expect_msg = '当前角色不存在！'\n\n    def assert_results(result, expect_result, expect_code, expect_msg):\n        \"\"\"\n        断言结果并记录日志。\n        参数:\n            result: 实际结果对象，应该包含success, error, data等属性。\n            expect_result: 期望的成功状态。\n            expect_code: 期望的返回code。\n            expect_msg: 期望的返回message。\n        \"\"\"\n    \n        # 断言实际结果与期望结果相同\n        assert result.success == expect_result, result.error\n        if \"接口请求失败\" in result.error:\n            assert False\n        # 记录期望和实际结果\n        logger.info(\"code ==>> 期望结果：{}， 实际结果：{}\".format(expect_code, result.data[\"code\"]))\n        logger.info(\"返回信息 ==>> 期望结果：{}， 实际结果：{}\".format(expect_msg, result.data[\"message\"]))\n        # 进一步断言返回的code和message\n>       assert result.data[\"code\"] == expect_code, \"Expected code: {}, but got: {}\".format(expect_code, result.data[\"code\"])\nE       AssertionError: Expected code: 9990, but got: 10088\nE       assert 10088 == 9990\n\n..\\..\\conftest.py:32: AssertionError"}, "description": "该用例是针对获取指定角色接口的测试", "attachments": [{"name": "log", "source": "facd0867-2298-46ca-98b1-07a936b57e09-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "token", "value": "'管理员token'"}, {"name": "roleId", "value": "''"}, {"name": "expect_result", "value": "False"}, {"name": "expect_code", "value": "9990"}, {"name": "expect_msg", "value": "'当前角色不存在！'"}], "start": 1730774171626, "stop": 1730774172041, "uuid": "ffb9868f-6415-44d7-8a95-839d713bcbf8", "historyId": "f5f2a5a248203a3c214b72869ed8e539", "testCaseId": "69e16f8e54ef12a666593906a2d99fd1", "fullName": "testcases.api_test.role_test.test_02_get_role.TestGetAllRole#test_get_role", "labels": [{"name": "story", "value": "用例--获取指定角色"}, {"name": "epic", "value": "针对单个接口的测试"}, {"name": "feature", "value": "角色模块"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.role_test"}, {"name": "suite", "value": "test_02_get_role"}, {"name": "subSuite", "value": "TestGetAllRole"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "20216-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.role_test.test_02_get_role"}]}