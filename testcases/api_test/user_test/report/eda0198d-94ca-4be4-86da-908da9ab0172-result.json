{"name": "test_add_user[萧然2--男-18592032351-2312213@qq.com-addRoleList2-False-10006-密码不能为空！]", "status": "failed", "statusDetails": {"message": "AssertionError: 接口返回码是 【 200 】, 返回信息：操作成功 \nassert True == False\n +  where True = <service.result_base.ResultBase object at 0x0000028A65EF65B0>.success", "trace": "self = <testcases.api_test.user_test.test_03_add_user.TestAddUser object at 0x0000028A65DF9F40>\nget_admin_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTcyOTc1NDg0NywiZXhwIjoxNzI5NzU4NDQ3LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.jjRcA7QjkdKEgJ4O8ml0V8y0nrZonu1BQpHglz8C7P8'\nuserName = '萧然2', password = '', gender = '男', phone = '18592032351'\nemail = '2312213@qq.com', addRoleList = [], expect_result = False\nexpect_code = 10006, expect_msg = '密码不能为空！'\n\n    @allure.story(\"用例--添加用户\")\n    @allure.description(\"该用例是针对添加用户接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"userName,password,gender,phone,email,addRoleList,expect_result, expect_code, expect_msg\",\n                             api_data[\"test_add_user\"])\n    def test_add_user(self,get_admin_token_fixture,userName,password,gender,phone,email,addRoleList,expect_result, expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = add_user(userName,password,gender,phone,email,addRoleList,get_admin_token_fixture)\n        logger.info(\"*************** 成功执行后清理该数据 ***************\")\n        if result.success:\n            db.execute_db(f\"delete from user where phone={phone}\")\n>       assert_results(result,expect_result, expect_code, expect_msg)\n\ntest_03_add_user.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresult = <service.result_base.ResultBase object at 0x0000028A65EF65B0>\nexpect_result = False, expect_code = 10006, expect_msg = '密码不能为空！'\n\n    def assert_results(result, expect_result, expect_code, expect_msg):\n        \"\"\"\n        断言结果并记录日志。\n        参数:\n            result: 实际结果对象，应该包含success, error, data等属性。\n            expect_result: 期望的成功状态。\n            expect_code: 期望的返回code。\n            expect_msg: 期望的返回message。\n        \"\"\"\n    \n        # 断言实际结果与期望结果相同\n>       assert result.success == expect_result, result.error\nE       AssertionError: 接口返回码是 【 200 】, 返回信息：操作成功 \nE       assert True == False\nE        +  where True = <service.result_base.ResultBase object at 0x0000028A65EF65B0>.success\n\n..\\..\\conftest.py:25: AssertionError"}, "description": "该用例是针对添加用户接口的测试", "attachments": [{"name": "log", "source": "0153f101-b62a-4c26-9504-76a0397b78f2-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "userName", "value": "'萧然2'"}, {"name": "password", "value": "''"}, {"name": "gender", "value": "'男'"}, {"name": "phone", "value": "'18592032351'"}, {"name": "email", "value": "'2312213@qq.com'"}, {"name": "addRoleList", "value": "[]"}, {"name": "expect_result", "value": "False"}, {"name": "expect_code", "value": "10006"}, {"name": "expect_msg", "value": "'密码不能为空！'"}], "start": 1729754851337, "stop": 1729754853450, "uuid": "480a923d-d7cf-41d7-bfba-65e9f3b2654c", "historyId": "2e33811f103ae5f544fb54634ddf9129", "testCaseId": "7457ebbf1a94d2e0f7a80d16d1ca7e91", "fullName": "testcases.api_test.user_test.test_03_add_user.TestAddUser#test_add_user", "labels": [{"name": "story", "value": "用例--添加用户"}, {"name": "epic", "value": "针对单个接口的测试"}, {"name": "feature", "value": "用户模块"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.user_test"}, {"name": "suite", "value": "test_03_add_user"}, {"name": "subSuite", "value": "TestAddUser"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "19880-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.user_test.test_03_add_user"}]}