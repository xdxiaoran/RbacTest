{"name": "test_get_all_user_reverse[-212313131-False-10007-当前用户不存在！]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected code: 10007, but got: 9991\nassert 9991 == 10007", "trace": "self = <testcases.api_test.user_test.test_02_get_user.TestGetAllUser object at 0x00000241E9AC9940>\nget_admin_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDcwMTkzOCwiZXhwIjoxNzMwNzA1NTM4LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.6PkLqM8vFl-pTjrNTCKzAVeuIB6Q949Zx3cEJzjabEg'\nuserId = '', token = '212313131', expect_result = False, expect_code = 10007\nexpect_msg = '当前用户不存在！'\n\n    @allure.story(\"用例--获取指定用户-逆向\")\n    @allure.description(\"该用例是针对获取指定用户接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"userId, token, expect_result, expect_code, expect_msg\",\n                             api_data[\"test_get_user_reverse\"])\n    # @pytest.mark.usefixtures(\"get_admin_token_fixture\")\n    def test_get_all_user_reverse(self, get_admin_token_fixture, userId,token, expect_result, expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = get_user(token, userId)\n>       assert_results(result, expect_result, expect_code, expect_msg)\n\ntest_02_get_user.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresult = <api.result_api.ResultBase object at 0x00000241E9BB6760>\nexpect_result = False, expect_code = 10007, expect_msg = '当前用户不存在！'\n\n    def assert_results(result, expect_result, expect_code, expect_msg):\n        \"\"\"\n        断言结果并记录日志。\n        参数:\n            result: 实际结果对象，应该包含success, error, data等属性。\n            expect_result: 期望的成功状态。\n            expect_code: 期望的返回code。\n            expect_msg: 期望的返回message。\n        \"\"\"\n    \n        # 断言实际结果与期望结果相同\n        assert result.success == expect_result, result.error\n        if \"接口请求失败\" in result.error:\n            assert False\n        # 记录期望和实际结果\n        logger.info(\"code ==>> 期望结果：{}， 实际结果：{}\".format(expect_code, result.data[\"code\"]))\n        logger.info(\"返回信息 ==>> 期望结果：{}， 实际结果：{}\".format(expect_msg, result.data[\"message\"]))\n        # 进一步断言返回的code和message\n>       assert result.data[\"code\"] == expect_code, \"Expected code: {}, but got: {}\".format(expect_code, result.data[\"code\"])\nE       AssertionError: Expected code: 10007, but got: 9991\nE       assert 9991 == 10007\n\n..\\..\\conftest.py:32: AssertionError"}, "description": "该用例是针对获取指定用户接口的测试", "attachments": [{"name": "log", "source": "f0c93c1b-ac0b-48e6-9387-4d82fb497fc4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "userId", "value": "''"}, {"name": "token", "value": "'212313131'"}, {"name": "expect_result", "value": "False"}, {"name": "expect_code", "value": "10007"}, {"name": "expect_msg", "value": "'当前用户不存在！'"}], "start": 1730701938705, "stop": 1730701938798, "uuid": "e554b485-021f-4cfd-9c7b-640f6ece03e7", "historyId": "7f4c4d7a8eaa33d8a6ef1c7e735cd8bb", "testCaseId": "45a2f0f85961a8bc515c67561d232d21", "fullName": "testcases.api_test.user_test.test_02_get_user.TestGetAllUser#test_get_all_user_reverse", "labels": [{"name": "feature", "value": "用户模块"}, {"name": "epic", "value": "针对单个接口的测试"}, {"name": "story", "value": "用例--获取指定用户-逆向"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.user_test"}, {"name": "suite", "value": "test_02_get_user"}, {"name": "subSuite", "value": "TestGetAllUser"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "28996-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.user_test.test_02_get_user"}]}