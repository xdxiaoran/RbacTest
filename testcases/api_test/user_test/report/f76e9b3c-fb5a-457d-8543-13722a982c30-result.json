{"name": "test_update_password[213123132131-1849351355764076546-18592037348-18592037348-False-10007-当前用户不存在]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected code: 10007, but got: 9991\nassert 9991 == 10007", "trace": "self = <testcases.api_test.user_test.test_05_updatePassword.TestUpdatePassword object at 0x000002248B05C640>\nget_test_user_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDcxMjQxOCwiZXhwIjoxNzMwNzE2MDE4LCJpZCI6MTg0OTM1MTM1NTc2NDA3NjU0Nn0.uRqrnDmsgs2snNdGgpzkQLDSCLt9lXZi1s_MSd__SbA'\nget_admin_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDcxMjQxOCwiZXhwIjoxNzMwNzE2MDE4LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.qYTd-KXHEuEZjifMVttlnkV7WVKYBwBbCSsFj2wVwmM'\nget_nopri_user_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDcxMjQxOSwiZXhwIjoxNzMwNzE2MDE5LCJpZCI6MTg0NjgwMTQ0MjQzMzY4MzQ1OH0.u9XPWMEoU64BEhXLL8eBl_Sr2V5Xs8a8Ls1zg_iAjMo'\ntoken = '213123132131', UserId = 1849351355764076546\noldPassword = '18592037348', newPassword = '18592037348', expect_result = False\nexpect_code = 10007, expect_msg = '当前用户不存在'\n\n    @allure.story(\"用例--用户更新个人密码\")\n    @allure.description(\"该用例是针对用户更新个人密码接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"token,UserId,oldPassword,newPassword, expect_result,expect_code, expect_msg\",\n                             api_data[\"test_update_password\"])\n    def test_update_password(self,get_test_user_token_fixture,get_admin_token_fixture,get_nopri_user_fixture,token,UserId\n                              ,oldPassword,newPassword,expect_result, expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        if token==\"测试token\":\n            token=get_test_user_token_fixture\n        if token==\"管理员token\":\n            token=get_admin_token_fixture\n        if token==\"无权限token\":\n            token=get_nopri_user_fixture\n        result = updata_password(UserId,oldPassword,newPassword,token)\n>       assert_results(result,expect_result, expect_code, expect_msg)\n\ntest_05_updatePassword.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresult = <api.result_api.ResultBase object at 0x000002248B098BE0>\nexpect_result = False, expect_code = 10007, expect_msg = '当前用户不存在'\n\n    def assert_results(result, expect_result, expect_code, expect_msg):\n        \"\"\"\n        断言结果并记录日志。\n        参数:\n            result: 实际结果对象，应该包含success, error, data等属性。\n            expect_result: 期望的成功状态。\n            expect_code: 期望的返回code。\n            expect_msg: 期望的返回message。\n        \"\"\"\n    \n        # 断言实际结果与期望结果相同\n        assert result.success == expect_result, result.error\n        if \"接口请求失败\" in result.error:\n            assert False\n        # 记录期望和实际结果\n        logger.info(\"code ==>> 期望结果：{}， 实际结果：{}\".format(expect_code, result.data[\"code\"]))\n        logger.info(\"返回信息 ==>> 期望结果：{}， 实际结果：{}\".format(expect_msg, result.data[\"message\"]))\n        # 进一步断言返回的code和message\n>       assert result.data[\"code\"] == expect_code, \"Expected code: {}, but got: {}\".format(expect_code, result.data[\"code\"])\nE       AssertionError: Expected code: 10007, but got: 9991\nE       assert 9991 == 10007\n\n..\\..\\conftest.py:32: AssertionError"}, "description": "该用例是针对用户更新个人密码接口的测试", "attachments": [{"name": "log", "source": "089bfb6f-5ddd-4ea9-846a-e58e4985174a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "token", "value": "'213123132131'"}, {"name": "UserId", "value": "1849351355764076546"}, {"name": "oldPassword", "value": "'18592037348'"}, {"name": "newPassword", "value": "'18592037348'"}, {"name": "expect_result", "value": "False"}, {"name": "expect_code", "value": "10007"}, {"name": "expect_msg", "value": "'当前用户不存在'"}], "start": 1730712420433, "stop": 1730712420697, "uuid": "78db068a-20c3-45f5-b9e7-30e3afcde18f", "historyId": "5d7173169166ee332f5c6572764ff2d3", "testCaseId": "27f43a764f57372097798ab4b05ac0ee", "fullName": "testcases.api_test.user_test.test_05_updatePassword.TestUpdatePassword#test_update_password", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "feature", "value": "用户模块"}, {"name": "story", "value": "用例--用户更新个人密码"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.user_test"}, {"name": "suite", "value": "test_05_updatePassword"}, {"name": "subSuite", "value": "TestUpdatePassword"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "13400-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.user_test.test_05_updatePassword"}]}