{"name": "test_add_user[萧然2--男-1859203351-2312213@qq.com-addRoleList2-False-10006-密码不能为空！]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected code: 10006, but got: 10071\nassert 10071 == 10006", "trace": "self = <testcases.api_test.user_test.test_03_add_user.TestAddUser object at 0x0000027392C2B040>\nget_admin_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTcyOTc1NDc5NiwiZXhwIjoxNzI5NzU4Mzk2LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.an3X9_mq3OqhbboyQVrfW4l-ZfIKvK-C35DGoyU93yA'\nuserName = '萧然2', password = '', gender = '男', phone = '1859203351'\nemail = '2312213@qq.com', addRoleList = [], expect_result = False\nexpect_code = 10006, expect_msg = '密码不能为空！'\n\n    @allure.story(\"用例--添加用户\")\n    @allure.description(\"该用例是针对添加用户接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"userName,password,gender,phone,email,addRoleList,expect_result, expect_code, expect_msg\",\n                             api_data[\"test_add_user\"])\n    def test_add_user(self,get_admin_token_fixture,userName,password,gender,phone,email,addRoleList,expect_result, expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = add_user(userName,password,gender,phone,email,addRoleList,get_admin_token_fixture)\n        logger.info(\"*************** 成功执行后清理该数据 ***************\")\n        if result.success:\n            db.execute_db(f\"delete from user where phone={phone}\")\n>       assert_results(result,expect_result, expect_code, expect_msg)\n\ntest_03_add_user.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresult = <service.result_base.ResultBase object at 0x0000027392D057F0>\nexpect_result = False, expect_code = 10006, expect_msg = '密码不能为空！'\n\n    def assert_results(result, expect_result, expect_code, expect_msg):\n        \"\"\"\n        断言结果并记录日志。\n        参数:\n            result: 实际结果对象，应该包含success, error, data等属性。\n            expect_result: 期望的成功状态。\n            expect_code: 期望的返回code。\n            expect_msg: 期望的返回message。\n        \"\"\"\n    \n        # 断言实际结果与期望结果相同\n        assert result.success == expect_result, result.error\n        # 记录期望和实际结果\n        logger.info(\"code ==>> 期望结果：{}， 实际结果：{}\".format(expect_code, result.data[\"code\"]))\n        logger.info(\"返回信息 ==>> 期望结果：{}， 实际结果：{}\".format(expect_msg, result.data[\"message\"]))\n        # 进一步断言返回的code和message\n>       assert result.data[\"code\"] == expect_code, \"Expected code: {}, but got: {}\".format(expect_code, result.data[\"code\"])\nE       AssertionError: Expected code: 10006, but got: 10071\nE       assert 10071 == 10006\n\n..\\..\\conftest.py:30: AssertionError"}, "description": "该用例是针对添加用户接口的测试", "attachments": [{"name": "log", "source": "a1e88364-9332-475f-9e8b-3889ac6acab7-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "userName", "value": "'萧然2'"}, {"name": "password", "value": "''"}, {"name": "gender", "value": "'男'"}, {"name": "phone", "value": "'1859203351'"}, {"name": "email", "value": "'2312213@qq.com'"}, {"name": "addRoleList", "value": "[]"}, {"name": "expect_result", "value": "False"}, {"name": "expect_code", "value": "10006"}, {"name": "expect_msg", "value": "'密码不能为空！'"}], "start": 1729754800361, "stop": 1729754801371, "uuid": "950a454d-ae8a-4d30-a6a1-348edcae1292", "historyId": "bc9d00d6066625f95e33c161bdebcbe4", "testCaseId": "7457ebbf1a94d2e0f7a80d16d1ca7e91", "fullName": "testcases.api_test.user_test.test_03_add_user.TestAddUser#test_add_user", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "story", "value": "用例--添加用户"}, {"name": "feature", "value": "用户模块"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.user_test"}, {"name": "suite", "value": "test_03_add_user"}, {"name": "subSuite", "value": "TestAddUser"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "3308-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.user_test.test_03_add_user"}]}