{"name": "test_update_user_role_info[测试token-1846801442433683458-deleteRoleList6-addRoleList6-False-10020-非法操作！]", "status": "failed", "statusDetails": {"message": "AssertionError: 接口返回码是 【 200 】, 返回信息：操作成功 \nassert True == False\n +  where True = <api.result_api.ResultBase object at 0x0000024D6CC89AF0>.success", "trace": "self = <testcases.api_test.user_test.test_03_update_user_role_info.TestUpDateUserRoleInfo object at 0x0000024D6CB85490>\nget_admin_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDcxMDM2NSwiZXhwIjoxNzMwNzEzOTY1LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.35nHsYfeABJHIYyOCk--w8At6M_AYDj8ztZPpLyXrR4'\nget_test_user_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDcxMDM2NSwiZXhwIjoxNzMwNzEzOTY1LCJpZCI6MTg0OTM1MTM1NTc2NDA3NjU0Nn0.GSm3YWBnBrlj9OlREut-n18aK2-hSNaWCaXM9Ro5PDU'\nget_nopri_user_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDcxMDM2NiwiZXhwIjoxNzMwNzEzOTY2LCJpZCI6MTg0NjgwMTQ0MjQzMzY4MzQ1OH0.N3OgHFUYiGSVaunpvYEDtY6T8ERrkYNLZxkP6KXs2BM'\ntoken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDcxMDM2NSwiZXhwIjoxNzMwNzEzOTY1LCJpZCI6MTg0OTM1MTM1NTc2NDA3NjU0Nn0.GSm3YWBnBrlj9OlREut-n18aK2-hSNaWCaXM9Ro5PDU'\nuserId = 1846801442433683458, deleteRoleList = []\naddRoleList = [1846079261643087883], expect_result = False, expect_code = 10020\nexpect_msg = '非法操作！'\n\n    @allure.story(\"用例--更新其他用户角色信息\")\n    @allure.description(\"该用例是针对更新其他用户角色信息接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"token,userId, deleteRoleList,addRoleList,expect_result,expect_code, expect_msg\",\n                             api_data[\"test_update_user_role_info\"])\n    def test_update_user_role_info(self,get_admin_token_fixture,get_test_user_token_fixture,get_nopri_user_fixture,\n                                   token,userId,deleteRoleList,addRoleList,expect_result, expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        if token==\"管理员token\":\n            token=get_admin_token_fixture\n        elif token==\"测试token\":\n            token=get_test_user_token_fixture\n        elif token==\"无权限token\":\n            token=get_nopri_user_fixture\n        result = update_user_role_info(userId,token,deleteRoleList,addRoleList)\n        if result.success:\n            db.execute_db(f\"delete  FROM `user_role` where user_id='{userId}'\")\n>       assert_results(result,expect_result, expect_code, expect_msg)\n\ntest_03_update_user_role_info.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresult = <api.result_api.ResultBase object at 0x0000024D6CC89AF0>\nexpect_result = False, expect_code = 10020, expect_msg = '非法操作！'\n\n    def assert_results(result, expect_result, expect_code, expect_msg):\n        \"\"\"\n        断言结果并记录日志。\n        参数:\n            result: 实际结果对象，应该包含success, error, data等属性。\n            expect_result: 期望的成功状态。\n            expect_code: 期望的返回code。\n            expect_msg: 期望的返回message。\n        \"\"\"\n    \n        # 断言实际结果与期望结果相同\n>       assert result.success == expect_result, result.error\nE       AssertionError: 接口返回码是 【 200 】, 返回信息：操作成功 \nE       assert True == False\nE        +  where True = <api.result_api.ResultBase object at 0x0000024D6CC89AF0>.success\n\n..\\..\\conftest.py:25: AssertionError"}, "description": "该用例是针对更新其他用户角色信息接口的测试", "attachments": [{"name": "log", "source": "c3a92d80-6044-4b03-b1c1-91d61039c417-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "token", "value": "'测试token'"}, {"name": "userId", "value": "1846801442433683458"}, {"name": "deleteRoleList", "value": "[]"}, {"name": "addRoleList", "value": "[1846079261643087883]"}, {"name": "expect_result", "value": "False"}, {"name": "expect_code", "value": "10020"}, {"name": "expect_msg", "value": "'非法操作！'"}], "start": 1730710370756, "stop": 1730710372885, "uuid": "fdac37ba-1aa9-4f56-af05-4817408ad139", "historyId": "028e285120ba78d07a82075c0eac601d", "testCaseId": "07b2a2da2410e8ec70744904a3e092e5", "fullName": "testcases.api_test.user_test.test_03_update_user_role_info.TestUpDateUserRoleInfo#test_update_user_role_info", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "story", "value": "用例--更新其他用户角色信息"}, {"name": "feature", "value": "用户模块"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.user_test"}, {"name": "suite", "value": "test_03_update_user_role_info"}, {"name": "subSuite", "value": "TestUpDateUserRoleInfo"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "5848-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.user_test.test_03_update_user_role_info"}]}