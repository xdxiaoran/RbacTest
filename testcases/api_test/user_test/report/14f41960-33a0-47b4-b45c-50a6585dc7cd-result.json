{"name": "test_get_user_info[1846030109260034050-无权限token-False-9992-你没有权限访问该接口！]", "status": "broken", "statusDetails": {"message": "UnicodeEncodeError: 'latin-1' codec can't encode characters in position 0-2: ordinal not in range(256)", "trace": "self = <testcases.api_test.user_test.test_02_get_user.TestGetUser object at 0x0000019C9DA72FD0>\nget_admin_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDcwNDQ5OCwiZXhwIjoxNzMwNzA4MDk4LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.xYWpj0vZXagSNb8Ligzh8O3TMv_yjPPumPJuefKjXKk'\nget_test_user_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDcwNDQ5OCwiZXhwIjoxNzMwNzA4MDk4LCJpZCI6MTg0OTM1MTM1NTc2NDA3NjU0Nn0.Ojdbzb9R3tze5AUiCD6YuEG-eYRgZYgQ-uU2kvyB6fQ'\nuserId = 1846030109260034050, token = '无权限token', expect_result = False\nexpect_code = 9992, expect_msg = '你没有权限访问该接口！'\n\n    @allure.story(\"用例--获取指定用户\")\n    @allure.description(\"该用例是针对获取指定用户接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"userId, token, expect_result, expect_code, expect_msg\",\n                             api_data[\"test_get_user_info\"])\n    # @pytest.mark.usefixtures(\"get_admin_token_fixture\")\n    def test_get_user_info(self,get_admin_token_fixture,get_test_user_token_fixture,userId,token, expect_result, expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        if token==\"管理员token\":\n            token=get_admin_token_fixture\n        elif token==\"测试token\":\n            token=get_test_user_token_fixture\n>       result = get_user(token,userId)\n\ntest_02_get_user.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\api\\user_api.py:45: in get_user\n    res=user_http_client.get_user(headers=haeders,data=data)\n..\\..\\..\\api\\rbac_http_client\\user_http_client.py:21: in get_user\n    return self.post(\"/getUser\", **kwargs)\n..\\..\\..\\common\\http_client.py:15: in post\n    return self.request(url, \"POST\", headers,data, json, **kwargs)\n..\\..\\..\\common\\http_client.py:33: in request\n    return self.session.post(url, headers=headers ,data=data, json=json,**kwargs)\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\sessions.py:590: in post\n    return self.request('POST', url, data=data, json=json, **kwargs)\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\sessions.py:542: in request\n    resp = self.send(prep, **send_kwargs)\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\sessions.py:655: in send\n    r = adapter.send(request, **kwargs)\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\adapters.py:439: in send\n    resp = conn.urlopen(\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\urllib3\\connectionpool.py:699: in urlopen\n    httplib_response = self._make_request(\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\urllib3\\connectionpool.py:394: in _make_request\n    conn.request(method, url, **httplib_request_kw)\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\urllib3\\connection.py:234: in request\n    super(HTTPConnection, self).request(method, url, body=body, headers=headers)\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\http\\client.py:1255: in request\n    self._send_request(method, url, body, headers, encode_chunked)\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\http\\client.py:1296: in _send_request\n    self.putheader(hdr, value)\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\urllib3\\connection.py:219: in putheader\n    _HTTPConnection.putheader(self, header, *values)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <urllib3.connection.HTTPConnection object at 0x0000019C9DB7F190>\nheader = b'token', values = ['无权限token'], i = 0, one_value = '无权限token'\n\n    def putheader(self, header, *values):\n        \"\"\"Send a request header line to the server.\n    \n        For example: h.putheader('Accept', 'text/html')\n        \"\"\"\n        if self.__state != _CS_REQ_STARTED:\n            raise CannotSendHeader()\n    \n        if hasattr(header, 'encode'):\n            header = header.encode('ascii')\n    \n        if not _is_legal_header_name(header):\n            raise ValueError('Invalid header name %r' % (header,))\n    \n        values = list(values)\n        for i, one_value in enumerate(values):\n            if hasattr(one_value, 'encode'):\n>               values[i] = one_value.encode('latin-1')\nE               UnicodeEncodeError: 'latin-1' codec can't encode characters in position 0-2: ordinal not in range(256)\n\nC:\\Users\\changan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\http\\client.py:1228: UnicodeEncodeError"}, "description": "该用例是针对获取指定用户接口的测试", "attachments": [{"name": "log", "source": "74776260-8f91-4ac5-af20-4aff7f2b5e9d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "userId", "value": "1846030109260034050"}, {"name": "token", "value": "'无权限token'"}, {"name": "expect_result", "value": "False"}, {"name": "expect_code", "value": "9992"}, {"name": "expect_msg", "value": "'你没有权限访问该接口！'"}], "start": 1730704500334, "stop": 1730704500335, "uuid": "85f82948-826f-4c1e-8306-2a58aa158961", "historyId": "50d558b3b9134ff134c84edc30e6f840", "testCaseId": "fe3166d09c7ac736dcdbb68a15fe73e3", "fullName": "testcases.api_test.user_test.test_02_get_user.TestGetUser#test_get_user_info", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "story", "value": "用例--获取指定用户"}, {"name": "feature", "value": "用户模块"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.user_test"}, {"name": "suite", "value": "test_02_get_user"}, {"name": "subSuite", "value": "TestGetUser"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "28004-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.user_test.test_02_get_user"}]}