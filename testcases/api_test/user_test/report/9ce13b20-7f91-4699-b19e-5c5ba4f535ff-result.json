{"name": "test_delete_user[无权限token-18592037349-False-9991-token过期失效！]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected code: 9991, but got: 9992\nassert 9992 == 9991", "trace": "self = <testcases.api_test.user_test.test_07_delete_user.TestDeleteUser object at 0x000001343DB384F0>\nget_admin_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDcxNjQ2MywiZXhwIjoxNzMwNzIwMDYzLCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.X68-2-RwE0gPbKYWI47imEDtyvuXodibc0ZUof-7e7w'\nget_nopri_user_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDcxNjQ2NCwiZXhwIjoxNzMwNzIwMDY0LCJpZCI6MTg0NjgwMTQ0MjQzMzY4MzQ1OH0.GMrZCqRE5ctBxmcLknWCE_QfxtQsOJpkrlywkAQXHwM'\ntoken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDcxNjQ2NCwiZXhwIjoxNzMwNzIwMDY0LCJpZCI6MTg0NjgwMTQ0MjQzMzY4MzQ1OH0.GMrZCqRE5ctBxmcLknWCE_QfxtQsOJpkrlywkAQXHwM'\nphone = '18592037349', expect_result = False, expect_code = 9991\nexpect_msg = 'token过期失效！'\n\n    @allure.story(\"用例--删除用户\")\n    @allure.description(\"该用例是针对删除用户接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"token,phone, expect_result,expect_code, expect_msg\",\n                             api_data[\"test_delete_user\"])\n    def test_delete_user(self,get_admin_token_fixture,get_nopri_user_fixture,token,phone,expect_result, expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        sql_res=db.select_db(\"select id from user where phone=\" + phone)\n        id=-1\n        if sql_res:\n            id=str(sql_res[0][\"id\"])\n        if token==\"管理员token\":\n            token=get_admin_token_fixture\n        elif token==\"无权限token\":\n            token=get_nopri_user_fixture\n        result = delete_user(id,token)\n        logger.info(\"*************** 恢复被删除用例状态 ***************\")\n        if result.success:\n                db.execute_db(f\"update user set is_delete=0 where id={id}\")\n>       assert_results(result,expect_result, expect_code, expect_msg)\n\ntest_07_delete_user.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresult = <api.result_api.ResultBase object at 0x000001343DC3CC70>\nexpect_result = False, expect_code = 9991, expect_msg = 'token过期失效！'\n\n    def assert_results(result, expect_result, expect_code, expect_msg):\n        \"\"\"\n        断言结果并记录日志。\n        参数:\n            result: 实际结果对象，应该包含success, error, data等属性。\n            expect_result: 期望的成功状态。\n            expect_code: 期望的返回code。\n            expect_msg: 期望的返回message。\n        \"\"\"\n    \n        # 断言实际结果与期望结果相同\n        assert result.success == expect_result, result.error\n        if \"接口请求失败\" in result.error:\n            assert False\n        # 记录期望和实际结果\n        logger.info(\"code ==>> 期望结果：{}， 实际结果：{}\".format(expect_code, result.data[\"code\"]))\n        logger.info(\"返回信息 ==>> 期望结果：{}， 实际结果：{}\".format(expect_msg, result.data[\"message\"]))\n        # 进一步断言返回的code和message\n>       assert result.data[\"code\"] == expect_code, \"Expected code: {}, but got: {}\".format(expect_code, result.data[\"code\"])\nE       AssertionError: Expected code: 9991, but got: 9992\nE       assert 9992 == 9991\n\n..\\..\\conftest.py:32: AssertionError"}, "description": "该用例是针对删除用户接口的测试", "attachments": [{"name": "log", "source": "dfd1ac02-c404-4435-a9a3-bddb3920dcd4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "token", "value": "'无权限token'"}, {"name": "phone", "value": "'18592037349'"}, {"name": "expect_result", "value": "False"}, {"name": "expect_code", "value": "9991"}, {"name": "expect_msg", "value": "'token过期失效！'"}], "start": 1730716468333, "stop": 1730716468898, "uuid": "1ed0026f-d183-48eb-bf9a-345499cfa1df", "historyId": "7565788d094458ba083dbc4eb130f6f6", "testCaseId": "3a458ca1dff71d31ac10913e20e9506a", "fullName": "testcases.api_test.user_test.test_07_delete_user.TestDeleteUser#test_delete_user", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "feature", "value": "用户模块"}, {"name": "story", "value": "用例--删除用户"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.user_test"}, {"name": "suite", "value": "test_07_delete_user"}, {"name": "subSuite", "value": "TestDeleteUser"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "6096-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.user_test.test_07_delete_user"}]}