{"name": "test_login[15320255643--False-10001-用户名或密码不能为空！]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected code: 10001, but got: 10002\nassert 10002 == 10001", "trace": "self = <testcases.api_test.index_uesr_test.test_02_login.TestLogin object at 0x000001979FECF880>\nphone = '15320255643', password = '', expect_result = False, expect_code = 10001\nexpect_msg = '用户名或密码不能为空！'\n\n    @allure.story(\"用例--用户登录\")\n    @allure.description(\"该用例是针对用户登录接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"phone, password, expect_result, expect_code, expect_msg\",\n                             api_data[\"test_login\"])\n    def test_login(self, phone, password, expect_result, expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = login(phone,password)\n>       assert_results(result,expect_result, expect_code, expect_msg)\n\ntest_02_login.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresult = <service.result_base.ResultBase object at 0x000001979FFB7550>\nexpect_result = False, expect_code = 10001, expect_msg = '用户名或密码不能为空！'\n\n    def assert_results(result, expect_result, expect_code, expect_msg):\n        \"\"\"\n        断言结果并记录日志。\n        参数:\n            result: 实际结果对象，应该包含success, error, data等属性。\n            expect_result: 期望的成功状态。\n            expect_code: 期望的返回code。\n            expect_msg: 期望的返回message。\n        \"\"\"\n    \n        # 断言实际结果与期望结果相同\n        assert result.success == expect_result, result.error\n        # 记录期望和实际结果\n        logger.info(\"code ==>> 期望结果：{}， 实际结果：{}\".format(expect_code, result.data[\"code\"]))\n        logger.info(\"返回信息 ==>> 期望结果：{}， 实际结果：{}\".format(expect_msg, result.data[\"message\"]))\n        # 进一步断言返回的code和message\n>       assert result.data[\"code\"] == expect_code, \"Expected code: {}, but got: {}\".format(expect_code, result.data[\"code\"])\nE       AssertionError: Expected code: 10001, but got: 10002\nE       assert 10002 == 10001\n\n..\\..\\conftest.py:29: AssertionError"}, "description": "该用例是针对用户登录接口的测试", "attachments": [{"name": "log", "source": "1609b1f4-ed40-496c-b167-78781c39c182-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "phone", "value": "'15320255643'"}, {"name": "password", "value": "''"}, {"name": "expect_result", "value": "False"}, {"name": "expect_code", "value": "10001"}, {"name": "expect_msg", "value": "'用户名或密码不能为空！'"}], "start": 1729675212158, "stop": 1729675212598, "uuid": "d4577a93-3bd9-428d-8ab6-3c02cfb62941", "historyId": "cfd3f6696cc2413d3ff887022d74fbc2", "testCaseId": "8d29894d028155fa3d8c38a37b637114", "fullName": "testcases.api_test.index_uesr_test.test_02_login.TestLogin#test_login", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "story", "value": "用例--用户登录"}, {"name": "feature", "value": "用户公共基础模块"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.index_uesr_test"}, {"name": "suite", "value": "test_02_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "6416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.index_uesr_test.test_02_login"}]}