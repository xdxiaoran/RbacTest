{"name": "test_update_resource[管理员token-1853687465346150401--testCode-testType-testDes-permissionList1-False-10006-资源名不能为空]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected message: 资源名不能为空, but got: 资源名不能为空！\nassert '资源名不能为空！' == '资源名不能为空'\n  \n  - 资源名不能为空\n  + 资源名不能为空！\n  ?        +", "trace": "self = <testcases.api_test.resource_test.test_03_update_resource.TestUpdateResource object at 0x000002464EEADAF0>\nget_admin_token_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc4OTYzNSwiZXhwIjoxNzMwNzkzMjM1LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.G0hn1QMfelU_DCuYbdqIL3elYzrT_HmR9BT0YSKTRW8'\nget_nopri_user_fixture = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc4OTYzNSwiZXhwIjoxNzMwNzkzMjM1LCJpZCI6MTg0NjgwMTQ0MjQzMzY4MzQ1OH0.MR4ZI1Kvev_Eun1_T02AXGUw3xMtSPqr697iC6GT-GU'\ntoken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYmFjLXVzZXIiLCJpc3MiOiJsb25nY2hhbyIsImlhdCI6MTczMDc4OTYzNSwiZXhwIjoxNzMwNzkzMjM1LCJpZCI6MTg0NjAzMDEwOTI2MDAzNDA1MH0.G0hn1QMfelU_DCuYbdqIL3elYzrT_HmR9BT0YSKTRW8'\nid = 1853687465346150401, resourceName = '', code = 'testCode'\ntype = 'testType', description = 'testDes', permissionList = []\nexpect_result = False, expect_code = 10006, expect_msg = '资源名不能为空'\n\n    @allure.story(\"用例--更新资源\")\n    @allure.description(\"该用例是针对更新资源接口的测试\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"token,id,resourceName,code,type,description,permissionList,expect_result, expect_code, expect_msg\",\n                             api_data[\"test_update_resource\"])\n    def test_update_resource(self,get_admin_token_fixture,get_nopri_user_fixture,token,id,resourceName,code,type,\n                             description,permissionList,expect_result, expect_code, expect_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        if token == \"管理员token\":\n            token = get_admin_token_fixture\n        elif token == \"无权限token\":\n            token = get_nopri_user_fixture\n        result = update_resource(token,id,resourceName,code,type,description,permissionList)\n>       assert_results(result,expect_result, expect_code, expect_msg)\n\ntest_03_update_resource.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresult = <api.result_api.ResultBase object at 0x000002464EFB9790>\nexpect_result = False, expect_code = 10006, expect_msg = '资源名不能为空'\n\n    def assert_results(result, expect_result, expect_code, expect_msg):\n        \"\"\"\n        断言结果并记录日志。\n        参数:\n            result: 实际结果对象，应该包含success, error, data等属性。\n            expect_result: 期望的成功状态。\n            expect_code: 期望的返回code。\n            expect_msg: 期望的返回message。\n        \"\"\"\n    \n        # 断言实际结果与期望结果相同\n        assert result.success == expect_result, result.error\n        if \"接口请求失败\" in result.error:\n            assert False\n        # 记录期望和实际结果\n        logger.info(\"code ==>> 期望结果：{}， 实际结果：{}\".format(expect_code, result.data[\"code\"]))\n        logger.info(\"返回信息 ==>> 期望结果：{}， 实际结果：{}\".format(expect_msg, result.data[\"message\"]))\n        # 进一步断言返回的code和message\n        assert result.data[\"code\"] == expect_code, \"Expected code: {}, but got: {}\".format(expect_code, result.data[\"code\"])\n>       assert result.data[\"message\"] == expect_msg, \"Expected message: {}, but got: {}\".format(expect_msg,\n                                                                                                result.data[\"message\"])\nE       AssertionError: Expected message: 资源名不能为空, but got: 资源名不能为空！\nE       assert '资源名不能为空！' == '资源名不能为空'\nE         \nE         - 资源名不能为空\nE         + 资源名不能为空！\nE         ?        +\n\n..\\..\\conftest.py:33: AssertionError"}, "description": "该用例是针对更新资源接口的测试", "attachments": [{"name": "log", "source": "15b8c108-5717-4fc8-847d-3396e82f67e5-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "token", "value": "'管理员token'"}, {"name": "id", "value": "1853687465346150401"}, {"name": "resourceName", "value": "''"}, {"name": "code", "value": "'testCode'"}, {"name": "type", "value": "'testType'"}, {"name": "description", "value": "'testDes'"}, {"name": "permissionList", "value": "[]"}, {"name": "expect_result", "value": "False"}, {"name": "expect_code", "value": "10006"}, {"name": "expect_msg", "value": "'资源名不能为空'"}], "start": 1730789637265, "stop": 1730789637773, "uuid": "81f354ef-751a-4e9a-b698-608927df3529", "historyId": "6f1af72965530eb6ccf75fac8f1e347d", "testCaseId": "777067c838226bc86470942a609bfbeb", "fullName": "testcases.api_test.resource_test.test_03_update_resource.TestUpdateResource#test_update_resource", "labels": [{"name": "story", "value": "用例--更新资源"}, {"name": "feature", "value": "资源模块"}, {"name": "epic", "value": "针对单个接口的测试"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test.resource_test"}, {"name": "suite", "value": "test_03_update_resource"}, {"name": "subSuite", "value": "TestUpdateResource"}, {"name": "host", "value": "CQCA202413058N"}, {"name": "thread", "value": "27364-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.resource_test.test_03_update_resource"}]}